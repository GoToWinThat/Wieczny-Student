// <auto-generated />
using System;
using Infrastructure.Persistance.DatabaseContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20201207032227_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Domain.Entities.Game.PropertyFieldInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("EstatesBought")
                        .HasColumnType("int");

                    b.Property<int?>("PlayerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.ToTable("PropertyFieldInfos");
                });

            modelBuilder.Entity("Domain.Entities.MonopolyField", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MonopolyFields");

                    b.HasDiscriminator<string>("Discriminator").HasValue("MonopolyField");
                });

            modelBuilder.Entity("Domain.Entities.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Cash")
                        .HasColumnType("int");

                    b.Property<string>("Nick")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("Domain.Entities.CornerField", b =>
                {
                    b.HasBaseType("Domain.Entities.MonopolyField");

                    b.HasDiscriminator().HasValue("CornerField");
                });

            modelBuilder.Entity("Domain.Entities.EventField", b =>
                {
                    b.HasBaseType("Domain.Entities.MonopolyField");

                    b.HasDiscriminator().HasValue("EventField");
                });

            modelBuilder.Entity("Domain.Entities.PropertyField", b =>
                {
                    b.HasBaseType("Domain.Entities.MonopolyField");

                    b.Property<int>("Color")
                        .HasColumnType("int");

                    b.Property<int>("EstatePrice")
                        .HasColumnType("int");

                    b.Property<int>("Mortage")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("PropertyFieldInfoRef")
                        .HasColumnType("int");

                    b.Property<bool>("Purschased")
                        .HasColumnType("bit");

                    b.Property<string>("RentCosts")
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("PropertyFieldInfoRef")
                        .IsUnique()
                        .HasFilter("[PropertyFieldInfoRef] IS NOT NULL");

                    b.HasDiscriminator().HasValue("PropertyField");
                });

            modelBuilder.Entity("Domain.Entities.Game.PropertyFieldInfo", b =>
                {
                    b.HasOne("Domain.Entities.Player", "Player")
                        .WithMany("PropertyFieldInfos")
                        .HasForeignKey("PlayerId");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("Domain.Entities.PropertyField", b =>
                {
                    b.HasOne("Domain.Entities.Game.PropertyFieldInfo", "PropertyFieldInfo")
                        .WithOne("PropertyField")
                        .HasForeignKey("Domain.Entities.PropertyField", "PropertyFieldInfoRef")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PropertyFieldInfo");
                });

            modelBuilder.Entity("Domain.Entities.Game.PropertyFieldInfo", b =>
                {
                    b.Navigation("PropertyField");
                });

            modelBuilder.Entity("Domain.Entities.Player", b =>
                {
                    b.Navigation("PropertyFieldInfos");
                });
#pragma warning restore 612, 618
        }
    }
}
