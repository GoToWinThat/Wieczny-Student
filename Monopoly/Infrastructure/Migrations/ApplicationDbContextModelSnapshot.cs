// <auto-generated />
using System;
using Infrastructure.Persistance.DatabaseContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("CardPlayer", b =>
                {
                    b.Property<int>("CardsId")
                        .HasColumnType("int");

                    b.Property<int>("PlayersId")
                        .HasColumnType("int");

                    b.HasKey("CardsId", "PlayersId");

                    b.HasIndex("PlayersId");

                    b.ToTable("CardPlayer");
                });

            modelBuilder.Entity("Domain.Entities.Cards.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CardIdNumber")
                        .HasColumnType("int");

                    b.Property<string>("CardName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cards");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Card");
                });

            modelBuilder.Entity("Domain.Entities.Game.Dices", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("DiceValues")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Dices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DiceValues = "1;1"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Game.GameInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ActivePlayerIndex")
                        .HasColumnType("int");

                    b.Property<int>("GameClock")
                        .HasColumnType("int");

                    b.Property<string>("GameState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TurnClock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GameInfo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActivePlayerIndex = 0,
                            GameClock = 0,
                            GameState = "waiting",
                            TurnClock = 0
                        });
                });

            modelBuilder.Entity("Domain.Entities.Game.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("LogInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Logs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LogInfo = "Zaczynamy gre"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Game.PropertyFieldInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("EstateLevel")
                        .HasColumnType("int");

                    b.Property<bool>("Mortgaged")
                        .HasColumnType("bit");

                    b.Property<int?>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int?>("PropertyFieldId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.HasIndex("PropertyFieldId")
                        .IsUnique()
                        .HasFilter("[PropertyFieldId] IS NOT NULL");

                    b.ToTable("PropertyFieldInfos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EstateLevel = 0,
                            Mortgaged = false,
                            PropertyFieldId = 2
                        },
                        new
                        {
                            Id = 2,
                            EstateLevel = 0,
                            Mortgaged = false,
                            PropertyFieldId = 4
                        },
                        new
                        {
                            Id = 3,
                            EstateLevel = 0,
                            Mortgaged = false,
                            PropertyFieldId = 5
                        },
                        new
                        {
                            Id = 4,
                            EstateLevel = 0,
                            Mortgaged = false,
                            PropertyFieldId = 6
                        },
                        new
                        {
                            Id = 5,
                            EstateLevel = 0,
                            Mortgaged = false,
                            PropertyFieldId = 7
                        },
                        new
                        {
                            Id = 6,
                            EstateLevel = 0,
                            Mortgaged = false,
                            PropertyFieldId = 8
                        },
                        new
                        {
                            Id = 7,
                            EstateLevel = 0,
                            Mortgaged = false,
                            PropertyFieldId = 10
                        },
                        new
                        {
                            Id = 8,
                            EstateLevel = 0,
                            Mortgaged = false,
                            PropertyFieldId = 12
                        },
                        new
                        {
                            Id = 9,
                            EstateLevel = 0,
                            Mortgaged = false,
                            PropertyFieldId = 13
                        },
                        new
                        {
                            Id = 10,
                            EstateLevel = 0,
                            Mortgaged = false,
                            PropertyFieldId = 15
                        },
                        new
                        {
                            Id = 11,
                            EstateLevel = 0,
                            Mortgaged = false,
                            PropertyFieldId = 16
                        },
                        new
                        {
                            Id = 12,
                            EstateLevel = 0,
                            Mortgaged = false,
                            PropertyFieldId = 18
                        },
                        new
                        {
                            Id = 13,
                            EstateLevel = 0,
                            Mortgaged = false,
                            PropertyFieldId = 19
                        },
                        new
                        {
                            Id = 14,
                            EstateLevel = 0,
                            Mortgaged = false,
                            PropertyFieldId = 20
                        },
                        new
                        {
                            Id = 15,
                            EstateLevel = 0,
                            Mortgaged = false,
                            PropertyFieldId = 22
                        },
                        new
                        {
                            Id = 16,
                            EstateLevel = 0,
                            Mortgaged = false,
                            PropertyFieldId = 25
                        },
                        new
                        {
                            Id = 17,
                            EstateLevel = 0,
                            Mortgaged = false,
                            PropertyFieldId = 26
                        },
                        new
                        {
                            Id = 18,
                            EstateLevel = 0,
                            Mortgaged = false,
                            PropertyFieldId = 27
                        },
                        new
                        {
                            Id = 19,
                            EstateLevel = 0,
                            Mortgaged = false,
                            PropertyFieldId = 28
                        },
                        new
                        {
                            Id = 20,
                            EstateLevel = 0,
                            Mortgaged = false,
                            PropertyFieldId = 29
                        },
                        new
                        {
                            Id = 21,
                            EstateLevel = 0,
                            Mortgaged = false,
                            PropertyFieldId = 30
                        },
                        new
                        {
                            Id = 22,
                            EstateLevel = 0,
                            Mortgaged = false,
                            PropertyFieldId = 32
                        },
                        new
                        {
                            Id = 23,
                            EstateLevel = 0,
                            Mortgaged = false,
                            PropertyFieldId = 33
                        },
                        new
                        {
                            Id = 24,
                            EstateLevel = 0,
                            Mortgaged = false,
                            PropertyFieldId = 34
                        },
                        new
                        {
                            Id = 25,
                            EstateLevel = 0,
                            Mortgaged = false,
                            PropertyFieldId = 36
                        },
                        new
                        {
                            Id = 26,
                            EstateLevel = 0,
                            Mortgaged = false,
                            PropertyFieldId = 37
                        },
                        new
                        {
                            Id = 27,
                            EstateLevel = 0,
                            Mortgaged = false,
                            PropertyFieldId = 39
                        });
                });

            modelBuilder.Entity("Domain.Entities.MonopolyField", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Color")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MonopolyID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MonopolyFields");

                    b.HasDiscriminator<string>("Discriminator").HasValue("MonopolyField");
                });

            modelBuilder.Entity("Domain.Entities.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Cash")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsBankrupt")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInJail")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLogged")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReady")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<string>("Signature")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<bool>("ThrownDices")
                        .HasColumnType("bit");

                    b.Property<int>("TurnsToWait")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cash = 500,
                            Color = "",
                            IsBankrupt = false,
                            IsInJail = false,
                            IsLogged = false,
                            IsReady = false,
                            Name = "",
                            Position = 0,
                            Signature = "",
                            ThrownDices = false,
                            TurnsToWait = 0
                        },
                        new
                        {
                            Id = 2,
                            Cash = 500,
                            Color = "",
                            IsBankrupt = false,
                            IsInJail = false,
                            IsLogged = false,
                            IsReady = false,
                            Name = "",
                            Position = 0,
                            Signature = "",
                            ThrownDices = false,
                            TurnsToWait = 0
                        },
                        new
                        {
                            Id = 3,
                            Cash = 500,
                            Color = "",
                            IsBankrupt = false,
                            IsInJail = false,
                            IsLogged = false,
                            IsReady = false,
                            Name = "",
                            Position = 0,
                            Signature = "",
                            ThrownDices = false,
                            TurnsToWait = 0
                        },
                        new
                        {
                            Id = 4,
                            Cash = 500,
                            Color = "",
                            IsBankrupt = false,
                            IsInJail = false,
                            IsLogged = false,
                            IsReady = false,
                            Name = "",
                            Position = 0,
                            Signature = "",
                            ThrownDices = false,
                            TurnsToWait = 0
                        });
                });

            modelBuilder.Entity("Domain.Entities.Cards.GainCard", b =>
                {
                    b.HasBaseType("Domain.Entities.Cards.Card");

                    b.HasDiscriminator().HasValue("GainCard");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CardIdNumber = 0,
                            CardName = "Pierwszeństwo w dziekanacie",
                            Description = "Masz przy sobie bardzo ważne dokumenty. Przy użyciu tej karty możesz od razu wyjść z dziekanatu nie tracąc żadnej kolejki.",
                            Type = "Gain"
                        },
                        new
                        {
                            Id = 2,
                            CardIdNumber = 1,
                            CardName = "Oświecenie na konsultacjach",
                            Description = "Pokazujesz się z dobrej strony już na początku konsultacji. Przy użyciu tej karty możesz od razu z nich wyjść, nie tracąc żadnej kolejki.",
                            Type = "Gain"
                        },
                        new
                        {
                            Id = 3,
                            CardIdNumber = 2,
                            CardName = "Wygrana w konkursie",
                            Description = "Reprezentujesz uczelnię na konkursie i wygrywasz go. Prowadzący postanowili zaliczyć Ci cały semestr. Otrzymujesz 50 ECTS.",
                            Type = "Gain"
                        },
                        new
                        {
                            Id = 4,
                            CardIdNumber = 3,
                            CardName = "ECTSobranie",
                            Description = "Grozi Ci warunek, więc jak zwykle wybierasz się na poszukiwanie ECTSów w lesie. Udaje Ci się znaleźć aż 30 ECTS!",
                            Type = "Gain"
                        },
                        new
                        {
                            Id = 5,
                            CardIdNumber = 4,
                            CardName = "Miss RMS / Mister RMS",
                            Description = "Zyskałaś tytuł najpiękniejszej studentki / zyskałeś tytuł najprzystojniejszego studenta! Otrzymujesz w nagrodę 10 ECTS.",
                            Type = "Gain"
                        },
                        new
                        {
                            Id = 6,
                            CardIdNumber = 5,
                            CardName = "Urodziny",
                            Description = "Masz urodziny i pozostali gracze życzą Ci zdania studiów. Dostajesz od każdego z nich 5 ECTS w prezencie.",
                            Type = "Gain"
                        },
                        new
                        {
                            Id = 7,
                            CardIdNumber = 6,
                            CardName = "Wyróżnienie przez dziekana",
                            Description = "Za wyróżnianie się w nauce dziekan uznał, że zasługujesz na 100 ECTS - właśnie tyle wpływa na Twoje konto.",
                            Type = "Gain"
                        },
                        new
                        {
                            Id = 8,
                            CardIdNumber = 7,
                            CardName = "Szczęśliwy traf",
                            Description = "Samorząd Wydziału zorganizował grę losową, w której do wygrania było 20 ECTS. Udało Ci się je wygrać!",
                            Type = "Gain"
                        },
                        new
                        {
                            Id = 9,
                            CardIdNumber = 8,
                            CardName = "Znajomości na stołówce",
                            Description = "Znajomy pracujący na stołówce studenckiej obiecał Ci, że obsłuży Cię bez kolejki, więc nie musisz tam czekać.",
                            Type = "Gain"
                        },
                        new
                        {
                            Id = 10,
                            CardIdNumber = 9,
                            CardName = "O, pinć ECTSów!",
                            Description = "Idziesz sobie po korytarzu aż nagle zauważasz, że na podłodze leży 5 ECTSów. Nikogo w pobliżu nie ma, więc bierzesz je dla siebie.",
                            Type = "Gain"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Cards.LossCard", b =>
                {
                    b.HasBaseType("Domain.Entities.Cards.Card");

                    b.HasDiscriminator().HasValue("LossCard");

                    b.HasData(
                        new
                        {
                            Id = 11,
                            CardIdNumber = 10,
                            CardName = "Zapomniany klucz",
                            Description = "Prowadzący zapomniał zabrać klucza z portierni. Poprosił Cię o zejście na dół i przyniesienie go. Wracasz na pole PORTIERNIA.",
                            Type = "Loss"
                        },
                        new
                        {
                            Id = 12,
                            CardIdNumber = 11,
                            CardName = "Zapłata rachunków",
                            Description = "Musisz zapłacić za prąd, internet i licencje programów. Za każde posiadane pole płacisz 10 ECTS.",
                            Type = "Loss"
                        },
                        new
                        {
                            Id = 13,
                            CardIdNumber = 12,
                            CardName = "Warunek",
                            Description = "W tym semestrze nie szło Ci zbyt dobrze w nauce i musisz zapłacić za zaliczenie warunkowe. Płacisz 30 ECTS.",
                            Type = "Loss"
                        },
                        new
                        {
                            Id = 14,
                            CardIdNumber = 13,
                            CardName = "Formalności",
                            Description = "Zaszła potrzeba wyjaśnienia przez Ciebie pewnej sytuacji. Niezwłocznie się udajesz się na pole DZIEKANAT.",
                            Type = "Loss"
                        },
                        new
                        {
                            Id = 15,
                            CardIdNumber = 14,
                            CardName = "Douczanie się",
                            Description = "Niestety materiał na wykładzie okazał się być zbyt trudny i musisz udać się na pole KONSULTACJE.",
                            Type = "Loss"
                        },
                        new
                        {
                            Id = 16,
                            CardIdNumber = 15,
                            CardName = "Głód",
                            Description = "Dopadł Cię głód. Niezwłocznie udajesz się na pole STOŁÓWKA STUDENCKA.",
                            Type = "Loss"
                        },
                        new
                        {
                            Id = 17,
                            CardIdNumber = 16,
                            CardName = "Spłata pożyczki",
                            Description = "W poprzednim semestrze znajomy pomógł Ci, pożyczając pewną sumę ECTSów. Teraz musisz mu wszystko oddać. Płacisz 20 ECTS.",
                            Type = "Loss"
                        },
                        new
                        {
                            Id = 18,
                            CardIdNumber = 17,
                            CardName = "Gdybym był bogaty",
                            Description = "Uznałeś / Uznałaś, że masz za dużo ECTSów i oddajesz każdemu nietracącemu kolejki graczowi kwotę 5 ECTS.",
                            Type = "Loss"
                        },
                        new
                        {
                            Id = 19,
                            CardIdNumber = 18,
                            CardName = "Dziura w kieszeni",
                            Description = "Niedawno zarobione pieniądze wkładasz do kieszeni. Niestety ta okazuje się posiadać dziurę w sobie. Tracisz 5 ECTS.",
                            Type = "Loss"
                        },
                        new
                        {
                            Id = 20,
                            CardIdNumber = 19,
                            CardName = "Spóźnienie",
                            Description = "Zajęcia trwały zbyt długo i odjechał Ci autobus. Tracisz kolejkę.",
                            Type = "Loss"
                        });
                });

            modelBuilder.Entity("Domain.Entities.CornerField", b =>
                {
                    b.HasBaseType("Domain.Entities.MonopolyField");

                    b.HasDiscriminator().HasValue("CornerField");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = 8,
                            MonopolyID = 0,
                            Name = "Portiernia",
                            Type = 2
                        },
                        new
                        {
                            Id = 11,
                            Color = 8,
                            MonopolyID = 10,
                            Name = "Konsultacje",
                            Type = 2
                        },
                        new
                        {
                            Id = 21,
                            Color = 8,
                            MonopolyID = 20,
                            Name = "Stołówka studencka",
                            Type = 2
                        },
                        new
                        {
                            Id = 31,
                            Color = 8,
                            MonopolyID = 30,
                            Name = "Dziekanat",
                            Type = 2
                        });
                });

            modelBuilder.Entity("Domain.Entities.EventField", b =>
                {
                    b.HasBaseType("Domain.Entities.MonopolyField");

                    b.HasDiscriminator().HasValue("EventField");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            Color = 9,
                            MonopolyID = 2,
                            Name = "Karta zysku",
                            Type = 1
                        },
                        new
                        {
                            Id = 9,
                            Color = 9,
                            MonopolyID = 8,
                            Name = "Karta straty",
                            Type = 1
                        },
                        new
                        {
                            Id = 14,
                            Color = 9,
                            MonopolyID = 13,
                            Name = "Karta zysku",
                            Type = 1
                        },
                        new
                        {
                            Id = 17,
                            Color = 9,
                            MonopolyID = 16,
                            Name = "Karta straty",
                            Type = 1
                        },
                        new
                        {
                            Id = 23,
                            Color = 9,
                            MonopolyID = 22,
                            Name = "Karta zysku",
                            Type = 1
                        },
                        new
                        {
                            Id = 24,
                            Color = 9,
                            MonopolyID = 23,
                            Name = "Karta straty",
                            Type = 1
                        },
                        new
                        {
                            Id = 35,
                            Color = 9,
                            MonopolyID = 34,
                            Name = "Karta straty",
                            Type = 1
                        },
                        new
                        {
                            Id = 38,
                            Color = 9,
                            MonopolyID = 37,
                            Name = "Karta zysku",
                            Type = 1
                        });
                });

            modelBuilder.Entity("Domain.Entities.PropertyField", b =>
                {
                    b.HasBaseType("Domain.Entities.MonopolyField");

                    b.Property<int>("EstatePrice")
                        .HasColumnType("int");

                    b.Property<int>("Mortgage")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("PropertyFieldInfoId")
                        .HasColumnType("int");

                    b.Property<bool>("Purchased")
                        .HasColumnType("bit");

                    b.Property<string>("RentCosts")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("PropertyField");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            Color = 0,
                            MonopolyID = 1,
                            Name = "Laboratorium nr 308 (MS)",
                            Type = 0,
                            EstatePrice = 10,
                            Mortgage = 6,
                            Price = 15,
                            PropertyFieldInfoId = 0,
                            Purchased = false,
                            RentCosts = "1;4;12;36;90"
                        },
                        new
                        {
                            Id = 4,
                            Color = 0,
                            MonopolyID = 3,
                            Name = "Laboratorium nr 309 (MS)",
                            Type = 0,
                            EstatePrice = 10,
                            Mortgage = 6,
                            Price = 15,
                            PropertyFieldInfoId = 0,
                            Purchased = false,
                            RentCosts = "1;4;12;36;90"
                        },
                        new
                        {
                            Id = 5,
                            Color = 0,
                            MonopolyID = 4,
                            Name = "Winda",
                            Type = 3,
                            EstatePrice = 0,
                            Mortgage = 20,
                            Price = 40,
                            PropertyFieldInfoId = 0,
                            Purchased = false,
                            RentCosts = "0"
                        },
                        new
                        {
                            Id = 6,
                            Color = 10,
                            MonopolyID = 5,
                            Name = "Toalety",
                            Type = 3,
                            EstatePrice = 0,
                            Mortgage = 20,
                            Price = 50,
                            PropertyFieldInfoId = 0,
                            Purchased = false,
                            RentCosts = "0"
                        },
                        new
                        {
                            Id = 7,
                            Color = 1,
                            MonopolyID = 6,
                            Name = "Laboratorium nr 401 (MS)",
                            Type = 0,
                            EstatePrice = 20,
                            Mortgage = 15,
                            Price = 20,
                            PropertyFieldInfoId = 0,
                            Purchased = false,
                            RentCosts = "3;12;35;90;150"
                        },
                        new
                        {
                            Id = 8,
                            Color = 1,
                            MonopolyID = 7,
                            Name = "Sala wykładowa nr 402 (MS)",
                            Type = 0,
                            EstatePrice = 20,
                            Mortgage = 20,
                            Price = 35,
                            PropertyFieldInfoId = 0,
                            Purchased = false,
                            RentCosts = "3;16;44;160;200"
                        },
                        new
                        {
                            Id = 10,
                            Color = 2,
                            MonopolyID = 9,
                            Name = "Laboratorium nr 406 (MS)",
                            Type = 0,
                            EstatePrice = 10,
                            Mortgage = 10,
                            Price = 22,
                            PropertyFieldInfoId = 0,
                            Purchased = false,
                            RentCosts = "1;6;18;54;90"
                        },
                        new
                        {
                            Id = 12,
                            Color = 2,
                            MonopolyID = 11,
                            Name = "Sala wykładowa nr 408 (MS)",
                            Type = 0,
                            EstatePrice = 10,
                            Mortgage = 12,
                            Price = 30,
                            PropertyFieldInfoId = 0,
                            Purchased = false,
                            RentCosts = "2;8;20;60;100"
                        },
                        new
                        {
                            Id = 13,
                            Color = 2,
                            MonopolyID = 12,
                            Name = "Laboratorium nr 409 (MS)",
                            Type = 0,
                            EstatePrice = 20,
                            Mortgage = 15,
                            Price = 35,
                            PropertyFieldInfoId = 0,
                            Purchased = false,
                            RentCosts = "3;10;25;70;125"
                        },
                        new
                        {
                            Id = 15,
                            Color = 3,
                            MonopolyID = 14,
                            Name = "Laboratorium nr 412 (MS)",
                            Type = 0,
                            EstatePrice = 20,
                            Mortgage = 14,
                            Price = 35,
                            PropertyFieldInfoId = 0,
                            Purchased = false,
                            RentCosts = "1;12;22;100;120"
                        },
                        new
                        {
                            Id = 16,
                            Color = 10,
                            MonopolyID = 15,
                            Name = "Toalety",
                            Type = 3,
                            EstatePrice = 0,
                            Mortgage = 20,
                            Price = 50,
                            PropertyFieldInfoId = 0,
                            Purchased = false,
                            RentCosts = "0"
                        },
                        new
                        {
                            Id = 18,
                            Color = 3,
                            MonopolyID = 17,
                            Name = "Laboratorium nr 415 (MS)",
                            Type = 0,
                            EstatePrice = 20,
                            Mortgage = 14,
                            Price = 39,
                            PropertyFieldInfoId = 0,
                            Purchased = false,
                            RentCosts = "2;12;22;100;130"
                        },
                        new
                        {
                            Id = 19,
                            Color = 3,
                            MonopolyID = 18,
                            Name = "Laboratorium nr 416 (MS)",
                            Type = 0,
                            EstatePrice = 20,
                            Mortgage = 14,
                            Price = 42,
                            PropertyFieldInfoId = 0,
                            Purchased = false,
                            RentCosts = "3;15;25;100;150"
                        },
                        new
                        {
                            Id = 20,
                            Color = 11,
                            MonopolyID = 19,
                            Name = "Sala nr 507 (MS)",
                            Type = 0,
                            EstatePrice = 20,
                            Mortgage = 22,
                            Price = 42,
                            PropertyFieldInfoId = 0,
                            Purchased = false,
                            RentCosts = "3;15;45;110;180"
                        },
                        new
                        {
                            Id = 22,
                            Color = 11,
                            MonopolyID = 21,
                            Name = "Laboratorium nr 510 (MS)",
                            Type = 0,
                            EstatePrice = 20,
                            Mortgage = 22,
                            Price = 42,
                            PropertyFieldInfoId = 0,
                            Purchased = false,
                            RentCosts = "3;15;45;110;180"
                        },
                        new
                        {
                            Id = 25,
                            Color = 4,
                            MonopolyID = 24,
                            Name = "Sala nr 310 (LB)",
                            Type = 0,
                            EstatePrice = 20,
                            Mortgage = 25,
                            Price = 45,
                            PropertyFieldInfoId = 0,
                            Purchased = false,
                            RentCosts = "3;18;50;140;210"
                        },
                        new
                        {
                            Id = 26,
                            Color = 10,
                            MonopolyID = 25,
                            Name = "Toalety",
                            Type = 3,
                            EstatePrice = 0,
                            Mortgage = 20,
                            Price = 50,
                            PropertyFieldInfoId = 0,
                            Purchased = false,
                            RentCosts = "0"
                        },
                        new
                        {
                            Id = 27,
                            Color = 4,
                            MonopolyID = 26,
                            Name = "Sala nr 315 (LB)",
                            Type = 0,
                            EstatePrice = 20,
                            Mortgage = 25,
                            Price = 50,
                            PropertyFieldInfoId = 0,
                            Purchased = false,
                            RentCosts = "3;20;60;150;230"
                        },
                        new
                        {
                            Id = 28,
                            Color = 5,
                            MonopolyID = 27,
                            Name = "Sala nr 425 (LB)",
                            Type = 0,
                            EstatePrice = 20,
                            Mortgage = 18,
                            Price = 50,
                            PropertyFieldInfoId = 0,
                            Purchased = false,
                            RentCosts = "3;14;40;110;150"
                        },
                        new
                        {
                            Id = 29,
                            Color = 5,
                            MonopolyID = 28,
                            Name = "Sala nr 426 (LB)",
                            Type = 0,
                            EstatePrice = 20,
                            Mortgage = 18,
                            Price = 50,
                            PropertyFieldInfoId = 0,
                            Purchased = false,
                            RentCosts = "3;14;40;110;150"
                        },
                        new
                        {
                            Id = 30,
                            Color = 5,
                            MonopolyID = 29,
                            Name = "Sala nr 427 (LB)",
                            Type = 0,
                            EstatePrice = 20,
                            Mortgage = 30,
                            Price = 60,
                            PropertyFieldInfoId = 0,
                            Purchased = false,
                            RentCosts = "3;15;45;120;170"
                        },
                        new
                        {
                            Id = 32,
                            Color = 6,
                            MonopolyID = 31,
                            Name = "Aula C (CEK)",
                            Type = 0,
                            EstatePrice = 40,
                            Mortgage = 30,
                            Price = 60,
                            PropertyFieldInfoId = 0,
                            Purchased = false,
                            RentCosts = "5;30;90;200;280"
                        },
                        new
                        {
                            Id = 33,
                            Color = 6,
                            MonopolyID = 32,
                            Name = "Aula A (CNT)",
                            Type = 0,
                            EstatePrice = 40,
                            Mortgage = 27,
                            Price = 60,
                            PropertyFieldInfoId = 0,
                            Purchased = false,
                            RentCosts = "6;38;92;190;250"
                        },
                        new
                        {
                            Id = 34,
                            Color = 6,
                            MonopolyID = 33,
                            Name = "Pracownia fizyczna nr 2 (CNT)",
                            Type = 0,
                            EstatePrice = 40,
                            Mortgage = 27,
                            Price = 60,
                            PropertyFieldInfoId = 0,
                            Purchased = false,
                            RentCosts = "6;40;95;250;350"
                        },
                        new
                        {
                            Id = 36,
                            Color = 10,
                            MonopolyID = 35,
                            Name = "Toalety",
                            Type = 3,
                            EstatePrice = 0,
                            Mortgage = 20,
                            Price = 50,
                            PropertyFieldInfoId = 0,
                            Purchased = false,
                            RentCosts = "0"
                        },
                        new
                        {
                            Id = 37,
                            Color = 13,
                            MonopolyID = 36,
                            Name = "Winda",
                            Type = 3,
                            EstatePrice = 0,
                            Mortgage = 20,
                            Price = 40,
                            PropertyFieldInfoId = 0,
                            Purchased = false,
                            RentCosts = "0"
                        },
                        new
                        {
                            Id = 39,
                            Color = 7,
                            MonopolyID = 38,
                            Name = "Biblioteka wydziałowa",
                            Type = 0,
                            EstatePrice = 40,
                            Mortgage = 35,
                            Price = 80,
                            PropertyFieldInfoId = 0,
                            Purchased = false,
                            RentCosts = "7;30;100;200;350"
                        },
                        new
                        {
                            Id = 40,
                            Color = 6,
                            MonopolyID = 39,
                            Name = "Pracownia fizyczna nr 2 (CNT)",
                            Type = 0,
                            EstatePrice = 40,
                            Mortgage = 45,
                            Price = 80,
                            PropertyFieldInfoId = 0,
                            Purchased = false,
                            RentCosts = "10;35;110;250;400"
                        });
                });

            modelBuilder.Entity("CardPlayer", b =>
                {
                    b.HasOne("Domain.Entities.Cards.Card", null)
                        .WithMany()
                        .HasForeignKey("CardsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Player", null)
                        .WithMany()
                        .HasForeignKey("PlayersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.Game.PropertyFieldInfo", b =>
                {
                    b.HasOne("Domain.Entities.Player", "Player")
                        .WithMany("PropertyFieldInfos")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Domain.Entities.PropertyField", "PropertyField")
                        .WithOne("PropertyFieldInfo")
                        .HasForeignKey("Domain.Entities.Game.PropertyFieldInfo", "PropertyFieldId");

                    b.Navigation("Player");

                    b.Navigation("PropertyField");
                });

            modelBuilder.Entity("Domain.Entities.Player", b =>
                {
                    b.Navigation("PropertyFieldInfos");
                });

            modelBuilder.Entity("Domain.Entities.PropertyField", b =>
                {
                    b.Navigation("PropertyFieldInfo");
                });
#pragma warning restore 612, 618
        }
    }
}
